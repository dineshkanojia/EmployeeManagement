@model IEnumerable<EmployeeManagement.Models.MeetingData>
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

<div class="container">
    <div class="row">
        <div id="scheduler_here" class="dhx_cal_container" style='width:100%; height:800px;'>
            <div class="dhx_cal_navline">
                <div class="dhx_cal_prev_button">&nbsp;</div>
                <div class="dhx_cal_next_button">&nbsp;</div>
                <div class="dhx_cal_today_button"></div>
                <div class="dhx_cal_date"></div>
                <div class="dhx_cal_tab" name="day_tab"></div>
                <div class="dhx_cal_tab" name="week_tab"></div>
                <div class="dhx_cal_tab" name="month_tab"></div>
            </div>
            <div class="dhx_cal_header"></div>
            <div class="dhx_cal_data"></div>
        </div>

    </div>
</div>

@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }
    <script src="~/SchedulerScripts/dhtmlxscheduler.js" type="text/javascript"></script>
    <link href="~/SchedulerScripts/dhtmlxscheduler.css" rel="stylesheet" type="text/css" />
    <link href="https://cdn.dhtmlx.com/scheduler/edge/dhtmlxscheduler_material.css"
          rel="stylesheet" type="text/css" />
    <script src="https://cdn.dhtmlx.com/scheduler/edge/dhtmlxscheduler.js"></script>
    @*<script type="text/javascript">

            $(document).ready(function () {
                scheduler.config.date_format = "%Y-%m-%d %H:%i";
                scheduler.init("scheduler_here", new Date(), "month");
                scheduler.load("https://localhost:44321/api/Meeting/GetAllMeeting", "json");
                var dp = new dataProcessor("https://localhost:44321/api/Meeting/GetAllMeeting");

                alert(dp);

                dp.init(scheduler);
                dp.setTransactionMode("REST");
            });


        </script>*@

    <script>
        document.addEventListener("DOMContentLoaded", function (event) {
            // initializing scheduler
            scheduler.init("scheduler_here", new Date());

            scheduler.setLoadMode("day");
            // initiating data loading
            scheduler.load("/api/SchedulerApi");
            // initializing dataProcessor
            var dp = new dataProcessor("/api/SchedulerApi");
            // and attaching it to scheduler
            dp.init(scheduler);
            // setting the REST mode for dataProcessor
            dp.setTransactionMode("REST");
        });</script>
}